package com.lottery.test.lottype;

import java.math.BigDecimal;

import org.junit.Assert;
import org.junit.Test;

import com.lottery.lottype.Jclqsfc;

public class JclqSFCTest {

	Jclqsfc sf = new Jclqsfc();
	
	@Test
	public void testValidate() {
		Assert.assertTrue(sf.validate("300311001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(5000), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300312001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(42600), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300313001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(156600), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300314001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(248400), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300313003-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(127800), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300313004-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(284400), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300314004-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(313200), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300314005-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(561600), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300314006-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(127800), new BigDecimal(1), 200));
		Assert.assertTrue(sf.validate("300314011-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(689400), new BigDecimal(1), 200));
	}
	
	
	@Test
	public void testValidate2() {
		Assert.assertTrue(sf.validate("300311001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(500000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300312001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(4260000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300313001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(15660000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300314001-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(24840000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300313003-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(12780000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300313004-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(28440000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300314004-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(31320000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300314005-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(56160000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300314006-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(12780000), new BigDecimal(100), 200));
		Assert.assertTrue(sf.validate("300314011-20140402301(01,02,03,04,05,06,11,12,13,14,15,16)|20140402302(01,02,03,04,05,06)|20140402303(01,02,03)|20140402304(01,02,03)|20140402305(01)^", new BigDecimal(68940000), new BigDecimal(100), 200));
	}
}

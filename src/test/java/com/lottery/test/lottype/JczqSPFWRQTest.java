package com.lottery.test.lottype;

import java.math.BigDecimal;

import org.junit.Assert;
import org.junit.Test;

import com.lottery.lottype.Jczqspfwrq;

public class JczqSPFWRQTest {

	Jczqspfwrq spf = new Jczqspfwrq();
	
	
	@Test
	public void testValidate() {
		Assert.assertTrue(spf.validate("301011001-20140101001(0,1,3)^", new BigDecimal(600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301011001-20140101001(0,1,3)|20140101002(0,1,3)^", new BigDecimal(1200), new BigDecimal(1), 200));
		
		
		Assert.assertTrue(spf.validate("301011001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(5400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301012001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(64800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301013001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301014001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2041200), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301015001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(12247200), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301017001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(15746400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301018001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11809800), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("301013003-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301013004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(907200), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("301014004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2721600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301014005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(4762800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301014006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(1360800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301014011-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("301015005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(10206000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301015006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(16329600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301015010-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301015016-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(23133600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301015020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301015026-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(25401600), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("301016006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(24494400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016015-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016022-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(57153600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11340000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016042-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(66225600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016050-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(31752000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301016057-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(68493600), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("301017007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301017008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(52488000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301017021-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301017035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(20412000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301017120-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0)|20140402008(0)|20140402009(3)^", new BigDecimal(25680000), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("301018008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3110400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301018009-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3839400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301018028-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5572800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301018056-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5486400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301018070-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3258000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301018247-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(10617400), new BigDecimal(1), 200));
	}
	
	
	@Test
	public void testValidate2() {
		Assert.assertTrue(spf.validate("301011001-20140101001(0,1,3)^", new BigDecimal(600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("301011001-20140101001(0,1,3)|20140101002(0,1,3)^", new BigDecimal(1200), new BigDecimal(1), 200));
		
		
		Assert.assertTrue(spf.validate("301011001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(5400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301012001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(64800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301013001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301014001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2041200).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301015001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(12247200).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301017001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(15746400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301018001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11809800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("301013003-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301013004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(907200).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("301014004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2721600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301014005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(4762800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301014006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(1360800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301014011-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("301015005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(10206000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301015006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(16329600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301015010-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301015016-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(23133600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301015020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301015026-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(25401600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("301016006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(24494400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016015-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016022-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(57153600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11340000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016042-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(66225600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016050-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(31752000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301016057-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(68493600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("301017007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301017008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(52488000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301017021-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301017035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(20412000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301017120-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0)|20140402008(0)|20140402009(3)^", new BigDecimal(25680000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("301018008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3110400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301018009-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3839400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301018028-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5572800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301018056-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5486400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301018070-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3258000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("301018247-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(10617400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
	}
	

}

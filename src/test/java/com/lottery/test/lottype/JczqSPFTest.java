package com.lottery.test.lottype;

import java.math.BigDecimal;

import org.junit.Assert;
import org.junit.Test;

import com.lottery.lottype.Jczqspf;

public class JczqSPFTest {

	Jczqspf spf = new Jczqspf();
	
	@Test
	public void testValidate() {
		Assert.assertTrue(spf.validate("300611001-20140101001(0,1,3)^", new BigDecimal(600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300611001-20140101001(0,1,3)|20140101002(0,1,3)^", new BigDecimal(1200), new BigDecimal(1), 200));
		
		
		Assert.assertTrue(spf.validate("300611001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(5400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300612001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(64800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300613001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300614001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2041200), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300615001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(12247200), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300617001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(15746400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300618001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11809800), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("300613003-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300613004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(907200), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("300614004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2721600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300614005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(4762800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300614006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(1360800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300614011-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("300615005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(10206000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300615006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(16329600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300615010-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300615016-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(23133600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300615020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300615026-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(25401600), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("300616006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(24494400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616015-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616022-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(57153600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11340000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616042-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(66225600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616050-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(31752000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300616057-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(68493600), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("300617007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300617008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(52488000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300617021-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300617035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(20412000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300617120-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0)|20140402008(0)|20140402009(3)^", new BigDecimal(25680000), new BigDecimal(1), 200));
		
		Assert.assertTrue(spf.validate("300618008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3110400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300618009-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3839400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300618028-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5572800), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300618056-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5486400), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300618070-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3258000), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300618247-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(10617400), new BigDecimal(1), 200));
	}
	
	
	@Test
	public void testValidate2() {
		Assert.assertTrue(spf.validate("300611001-20140101001(0,1,3)^", new BigDecimal(600), new BigDecimal(1), 200));
		Assert.assertTrue(spf.validate("300611001-20140101001(0,1,3)|20140101002(0,1,3)^", new BigDecimal(1200), new BigDecimal(1), 200));
		
		
		Assert.assertTrue(spf.validate("300611001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(5400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300612001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(64800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300613001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300614001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2041200).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300615001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(12247200).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300617001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(15746400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300618001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11809800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("300613003-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(453600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300613004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(907200).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("300614004-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2721600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300614005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(4762800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300614006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(1360800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300614011-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(6123600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("300615005-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(10206000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300615006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(16329600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300615010-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300615016-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(23133600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300615020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300615026-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(25401600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("300616006-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(24494400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616015-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(2268000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616020-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(9072000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616022-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(57153600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11340000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616042-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(66225600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616050-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(31752000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300616057-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(68493600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("300617007-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300617008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(52488000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300617021-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(36741600).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300617035-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(20412000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300617120-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0)|20140402008(0)|20140402009(3)^", new BigDecimal(25680000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		
		Assert.assertTrue(spf.validate("300618008-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3110400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300618009-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3839400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300618028-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5572800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300618056-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(5486400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300618070-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(3258000).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
		Assert.assertTrue(spf.validate("300618247-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0)|20140402007(3)|20140402008(3)|20140402009(3)^", new BigDecimal(10617400).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
	}
	
	
	@Test
	public void test() {
		Assert.assertTrue(spf.validate("301018001-20140402001(0,1,3)|20140402002(0,1,3)|20140402003(0,1,3)|20140402004(0,1,3)|20140402005(0,1,3)|20140402006(0,1,3)|20140402007(0,1,3)|20140402008(0,1,3)|20140402009(0,1,3)^", new BigDecimal(11809800).multiply(new BigDecimal(2)), new BigDecimal(2), 200));
	}
}
